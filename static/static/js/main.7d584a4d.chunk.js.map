{"version":3,"sources":["components/home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","inputText","setInputText","showPage","setShowPage","results","setResults","className","src","map","result","index","width","height","id","type","disabled","onChange","e","target","value","placeholder","onClick","url","fetch","then","response","json","getSearchResults","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAwDeA,G,MArDF,SAACC,GAAW,IAAD,EACcC,mBAAS,IADvB,mBACbC,EADa,KACFC,EADE,OAEYF,oBAAS,GAFrB,mBAEbG,EAFa,KAEHC,EAFG,OAGUJ,mBAAS,IAHnB,mBAGbK,EAHa,KAGJC,EAHI,KAcpB,OACI,gCACI,qBAAKC,UAAU,oBAAf,yBACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAWJ,EAAW,aAAe,QAASK,IAAI,2BAGvDL,GACA,qBAAKI,UAAU,eAAf,SACI,qBAAKA,UAAU,aAAf,SAEQF,EAAQI,KAAI,SAACC,EAAQC,GAAT,OACZ,mBAAGJ,UAAU,cAAb,SACKG,WAOrB,qBAAKH,UAAS,sBAAiBJ,EAAW,QAAU,IAApD,SACI,sBAAKI,UAAU,eAAf,UACI,qBAAKC,IAAI,kBAAkBD,UAAU,qBAAqBK,MAAM,KAAKC,OAAO,KAAKC,GAAG,WACpF,uBAAOC,KAAK,OACRR,UAAU,aAAaS,SAAYb,EAAU,WAAa,GAC1Dc,SAAU,SAACC,GAAD,OAAOhB,EAAagB,EAAEC,OAAOC,QAAQC,YAAY,+BAE3DpB,IAAcE,EAAW,mBAAGI,UAAU,0BAA0Be,QAAS,kBApCpE,WACrBlB,GAAY,GACZ,IAAKmB,EAAG,oBAAgBtB,GACxBuB,MAAMD,GAAKE,MAAK,SAACC,GACTA,EAASC,OAAOF,MAAK,SAACpB,GAClBC,EAAWD,SA+BwEuB,MAC7EzB,GAAY,mBAAGI,UAAU,oBAAoBe,QAAS,kBAAMlB,GAAY,WAItF,qBAAKG,UAAU,QAAf,SACI,qBAAKA,UAAS,UAAKJ,EAAW,mBAAqB,cAArC,UAA4DK,IAAI,0B,MCnC/EqB,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,S,QCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d584a4d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport \"./index.css\"\r\n\r\nconst Home = (props) => {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [showPage, setShowPage] = useState(false);\r\n    const [results, setResults] = useState([]);\r\n\r\n    const getSearchResults = () => {\r\n        setShowPage(true);\r\n        let  url = `/search?q=${inputText}`;\r\n        fetch(url).then((response) => {\r\n                response.json().then((results) => {\r\n                    setResults(results);\r\n            });\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"left main-heading\">Shakesearch</div>\r\n            <div className=\"wrapper\">\r\n                <img className={showPage ? \"hide-slide\" : \"slide\"} src=\"/img/shakespeare.png\" />\r\n            </div>\r\n            {\r\n                showPage && \r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"page-slide\">\r\n                        { \r\n                            results.map((result, index) => (\r\n                            <p className=\"text p-text\">\r\n                                {result}\r\n                            </p>\r\n                          ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={`group pl-10 ${showPage ? \"pl-10\" : \"\"}`}>\r\n                <div className=\"search-field\">\r\n                    <img src=\"/img/search.png\" className=\"empty scale vector\" width=\"44\" height=\"44\" id=\"n6_104\" />\r\n                    <input type=\"text\" \r\n                        className=\"input-text\" disabled = {showPage? \"disabled\" : \"\"} \r\n                        onChange={(e) => setInputText(e.target.value)} placeholder=\"What art thee looking f'r?\" />\r\n                    {\r\n                        inputText && !showPage ? <i className=\"fa fa-arrow-right arrow\" onClick={() => getSearchResults(true)}></i>\r\n                        : showPage && <i className=\"fa fa-times arrow\" onClick={() => setShowPage(false)}></i>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"lines\">\r\n                <img className={`${showPage ? \"hide-lines-image\" : \"lines-image\"} mt-15`} src=\"/img/lines.png\" /> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './components/home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Home />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}